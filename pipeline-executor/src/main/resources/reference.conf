gc {
  resourceRequests {
    bcl2fastq {
      cpu = 1
      ram = 4000
      scratch = 0
    }
    bwa {
      cpu = 1
      ram = 4000
      scratch = 100000
    }
    sortBam {
      cpu = 1
      ram = 4000
      scratch = 50000
    }
    picardMergeAndMarkDuplicates {
      cpu = 1
      ram = 4000
      scratch = 50000
    }
    indexReference {
      cpu = 1
      ram = 4000
      scratch = 5000
    }
    trainBqsr {
      cpu = 1
      ram = 4000
      scratch = 5000
    }
    applyBqsr {
      cpu = 1
      ram = 4000
      scratch = 5000
    }
    minimal {
      cpu = 1
      ram = 4000
      scratch = 5000
    }
    fastp {
      cpu = 1
      ram = 4000
      scratch = 1000
    }
    createStarIndex {
      cpu = 1
      ram = 4000
      scratch = 1000
    }
    starAlignment {
      cpu = 1
      ram = 4000
      scratch = 1000
    }
    readQC {
      cpu = 1
      ram = 4000
      scratch = 1000
    }
    haplotypeCaller {
      cpu = 1
      ram = 4000
      scratch = 1000
    }
    genotypeGvcfs {
      cpu = 1
      ram = 4000
      scratch = 1000
    }
    vqsrTrainIndel {
      cpu = 1
      ram = 4000
      scratch = 1000
    }
    vqsrTrainSnp {
      cpu = 1
      ram = 4000
      scratch = 1000
    }
    vqsrApply {
      cpu = 1
      ram = 4000
      scratch = 1000
    }
    picardSamSortRecordPerMegabyteHeap = 500
    
    uncompressedBamSizeBytePerRead = 300
  }

  pipeline {
    folders = []
  }
}

